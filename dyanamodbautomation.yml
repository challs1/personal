AWSTemplateFormatVersion: '2010-09-09'
Description: This template creates Amazon EC2 instances in an Auto Scaling group. **WARNING** This template creates Amazon EC2 instances and related resources. You will be billed
Parameters:
  Environment:
    Type: String
  ConfigFile:
    Type: String
  PrivateSubnets:
    Type: List<AWS::EC2::Subnet::Id>
    Default: 'subnet-4bd9f500'
  InstanceType:
    Type: String
  AmiId:
    Type: AWS::EC2::Image::Id
    Default: 'ami-97785bed'
  DefaultSecurityGroup:
    Type: String
  MgmtSecurityGroup:
    Type: String
  EFSMountPoint:
    Type: String
    Default: '/home/ec2-user/efs-scout2'
  MountTargetIps:
    Type: String
  BucketName:
    Type: String
  KeyPair:
    Type: String
Conditions:
  AllAccounts: !Not [ !Equals [!Ref Environment, 'Dev']]
  CreateQAResources: !Equals [!Ref Environment, "QA"]
  CreateProdResources: !Equals [!Ref Environment, "Prod"]
  CreateDevResources: !Equals [!Ref Environment, "Dev"]
Resources:
  Scout2MgmtEc2Profile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: '/'
      Roles:
      - Ref: Scout2MgmtEc2Role
  Scout2MgmtEc2Role:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - ec2.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: "/"
      Policies:
      -
        PolicyName: Scout2Install
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
            -
              Action:
                - "s3:ListAllMyBuckets"
                - "s3:GetBucketLocation"
              Resource: "arn:aws:s3:::*"
              Effect: "Allow"
            -
              Action:
                - "s3:ListBucket"
                - "s3:GetObject"
                - "s3:GetObjectAcl"
              Resource:
                - !Sub "arn:aws:s3:::ss-vsts-codepipeline-${AWS::Region}/vsts/${AWS::AccountId}/deployment/scout2/*"
              Effect: "Allow"
            -
              Action: 
                - "dynamodb:DescribeTable"
                - "dynamodb:Query"
                - "dynamodb:Scan"
              Resource: 
                - !Sub "arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/awsaccounts-crossaccountrole-list"
              Effect: "Allow"
      ManagedPolicyArns:
        - !Ref Scout2MgmtCrossAccount
        - arn:aws:iam::aws:policy/ReadOnlyAccess
        - arn:aws:iam::aws:policy/SecurityAudit
  Scout2MgmtCrossAccount:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
          - sts:AssumeRole
          Resource:
          - arn:aws:iam::413750806156:role/AWSAudit_CrossAccount
          - arn:aws:iam::452253933603:role/AWSAudit_CrossAccount
          - arn:aws:iam::317478934138:role/AWSAudit_CrossAccount
          - arn:aws:iam::308591795231:role/AWSAudit_CrossAccount
          - arn:aws:iam::478226638351:role/Scout2MgmtEc2Role
          - arn:aws:iam::002710387481:role/AWSAudit_CrossAccount
          - arn:aws:iam::799824181982:role/AWSAudit_CrossAccount
          - !If [AllAccounts, 'arn:aws:iam::620890749476:role/AWSAudit_CrossAccount', !Ref 'AWS::NoValue']
          - !If [AllAccounts, 'arn:aws:iam::656990482673:role/AWSAudit_CrossAccount', !Ref 'AWS::NoValue']
          - !If [AllAccounts, 'arn:aws:iam::128389660555:role/AWSAudit_CrossAccount', !Ref 'AWS::NoValue']
          - !If [AllAccounts, 'arn:aws:iam::944573716837:role/AWSAudit_CrossAccount', !Ref 'AWS::NoValue']
          - !If [AllAccounts, 'arn:aws:iam::263363729850:role/AWSAudit_CrossAccount', !Ref 'AWS::NoValue']
          - !If [AllAccounts, 'arn:aws:iam::828711334708:role/AWSAudit_CrossAccount', !Ref 'AWS::NoValue']
          - !If [AllAccounts, 'arn:aws:iam::141576945838:role/AWSAudit_CrossAccount', !Ref 'AWS::NoValue']
          - !If [AllAccounts, 'arn:aws:iam::238298454097:role/AWSAudit_CrossAccount', !Ref 'AWS::NoValue']
          - !If [AllAccounts, 'arn:aws:iam::520111439412:role/AWSAudit_CrossAccount', !Ref 'AWS::NoValue']
          - !If [AllAccounts, 'arn:aws:iam::610872094909:role/AWSAudit_CrossAccount', !Ref 'AWS::NoValue']
          - !If [AllAccounts, 'arn:aws:iam::009617208910:role/AWSAudit_CrossAccount', !Ref 'AWS::NoValue']
          - !If [AllAccounts, 'arn:aws:iam::054518192585:role/AWSAudit_CrossAccount', !Ref 'AWS::NoValue']
          - !If [AllAccounts, 'arn:aws:iam::205231843124:role/AWSAudit_CrossAccount', !Ref 'AWS::NoValue']
          - !If [AllAccounts, 'arn:aws:iam::355391146408:role/AWSAudit_CrossAccount', !Ref 'AWS::NoValue']
          - !If [AllAccounts, 'arn:aws:iam::100178607838:role/AWSAudit_CrossAccount', !Ref 'AWS::NoValue']
          - !If [AllAccounts, 'arn:aws:iam::642500132467:role/AWSAudit_CrossAccount', !Ref 'AWS::NoValue']
          - !If [AllAccounts, 'arn:aws:iam::043691484226:role/AWSAudit_CrossAccount', !Ref 'AWS::NoValue']
          - !If [AllAccounts, 'arn:aws:iam::327349948073:role/AWSAudit_CrossAccount', !Ref 'AWS::NoValue']
          - !If [AllAccounts, 'arn:aws:iam::006172073716:role/AWSAudit_CrossAccount', !Ref 'AWS::NoValue']
          - !If [AllAccounts, 'arn:aws:iam::342101340642:role/AWSAudit_CrossAccount', !Ref 'AWS::NoValue']
          - !If [AllAccounts, 'arn:aws:iam::158134245097:role/AWSAudit_CrossAccount', !Ref 'AWS::NoValue']
          - !If [AllAccounts, 'arn:aws:iam::944898352560:role/AWSAudit_CrossAccount', !Ref 'AWS::NoValue']
          - !If [AllAccounts, 'arn:aws:iam::063913871427:role/AWSAudit_CrossAccount', !Ref 'AWS::NoValue']  
  LaunchConfig:
    Type: AWS::AutoScaling::LaunchConfiguration
    Metadata:
      Comment: install Scout2,nfs and configure efs
      AWS::CloudFormation::Init:
        configSets:
          cfn-hupconfig:
            - config
          Scout2:
            - install
            - configure
          EFSMountConfig:
            - setup
        config:
          services:
            sysvinit:
              cfn-hup:
                enabled: "true"
                ensureRunning: "true"
                files:
                  - "/etc/cfn/cfn-hup.conf"
                  - "/etc/cfn/hooks.d/cfn-auto-reloader.conf"
          files:
              "/etc/cfn/cfn-hup.conf":
                content: !Sub |
                  [main]
                  stack=${AWS::StackId}
                  region=${AWS::Region}
                  interval=1
                mode: "000400"
                owner: root
                group: root
              "/etc/cfn/hooks.d/cfn-auto-reloader.conf":
                content: !Sub |
                  [cfn-auto-reloader-hook]
                  triggers=post.update
                  path=Resources.LaunchConfig.Metadata.AWS::CloudFormation::Init
                  action=/opt/aws/bin/cfn-init --verbose --stack=${AWS::StackName} --region=${AWS::Region} --resource=LaunchConfig
                  runas=root
        install:
            commands:
              01_install:
                command: !Sub "pip install awsscout2==3.2.0  --proxy http://172.18.10.246:80"
                ignoreErrors: "false"
              02_installdateutils:
                command: !Sub "pip install python-dateutil==2.6.1 --proxy http://172.18.10.246:80"
        configure:
           files:
             "/home/ec2-user/.aws/devconfig":
               content: !Sub |
                 [profile eroute_dev]
                 role_arn = arn:aws:iam::413750806156:role/AWSAudit_CrossAccount
                 source_profile = default
                 [profile psld-dev]
                 role_arn = arn:aws:iam::452253933603:role/AWSAudit_CrossAccount
                 source_profile = default
                 [profile eroute_prod]
                 role_arn = arn:aws:iam::317478934138:role/AWSAudit_CrossAccount
                 source_profile = default
                 [profile eChannel]
                 role_arn = arn:aws:iam::308591795231:role/AWSAudit_CrossAccount
                 source_profile = default
                 [profile default]
                 role_arn = arn:aws:iam::478226638351:role/Scout2MgmtEc2Role
                 source_profile = default
                 [profile Intranet-Sandbox]
                 role_arn = arn:aws:iam::799824181982:role/AWSAudit_CrossAccount
                 source_profile = default
                 [profile Internet-Sandbox]
                 role_arn = arn:aws:iam::002710387481:role/AWSAudit_CrossAccount
                 source_profile = default
               mode: "000744"
               owner: ec2-user
               group: ec2-user
             "/home/ec2-user/.aws/config":
               content: !Sub |
                  [profile default]
                  role_arn = arn:aws:iam::478226638351:role/Scout2MgmtEc2Role
                  source_profile = default
                  [profile intranetsandbox]
                  role_arn = arn:aws:iam::799824181982:role/AWSAudit_CrossAccount
                  source_profile = default
                  [profile internetsandbox]
                  role_arn = arn:aws:iam::002710387481:role/AWSAudit_CrossAccount
                  source_profile = default
                  [profile sharedservice]
                  role_arn = arn:aws:iam::620890749476:role/AWSAudit_CrossAccount
                  source_profile = default
                  [profile orgbilling]
                  role_arn = arn:aws:iam::656990482673:role/AWSAudit_CrossAccount
                  source_profile = default
                  [profile ddswhadoopdev]
                  role_arn = arn:aws:iam::944573716837:role/AWSAudit_CrossAccount
                  source_profile = default
                  [profile ddswhadoopprod]
                  role_arn = arn:aws:iam::263363729850:role/AWSAudit_CrossAccount
                  source_profile = default
                  [profile ecatinnovation]
                  role_arn = arn:aws:iam::828711334708:role/AWSAudit_CrossAccount
                  source_profile = default
                  [profile edsdev]
                  role_arn = arn:aws:iam::141576945838:role/AWSAudit_CrossAccount
                  source_profile = default
                  [profile edsprod]
                  role_arn = arn:aws:iam::238298454097:role/AWSAudit_CrossAccount
                  source_profile = default
                  [profile mdmdev]
                  role_arn = arn:aws:iam::520111439412:role/AWSAudit_CrossAccount
                  source_profile = default
                  [profile mdmprod]
                  role_arn = arn:aws:iam::610872094909:role/AWSAudit_CrossAccount
                  source_profile = default
                  [profile secriskmgmt]
                  role_arn = arn:aws:iam::009617208910:role/AWSAudit_CrossAccount
                  source_profile = default
                  [profile symphonycntlplane]
                  role_arn = arn:aws:iam::054518192585:role/AWSAudit_CrossAccount
                  source_profile = default
                  [profile symphonyprod]
                  role_arn = arn:aws:iam::205231843124:role/AWSAudit_CrossAccount
                  source_profile = default
                  [profile symphonydev]
                  role_arn = arn:aws:iam::355391146408:role/AWSAudit_CrossAccount
                  source_profile = default
                  [profile catweardev]
                  role_arn = arn:aws:iam::100178607838:role/AWSAudit_CrossAccount
                  source_profile = default
                  [profile catwearprod]
                  role_arn = arn:aws:iam::642500132467:role/AWSAudit_CrossAccount
                  source_profile = default
                  [profile catwearstaging]
                  role_arn = arn:aws:iam::043691484226:role/AWSAudit_CrossAccount
                  source_profile = default
                  [profile shareddev1]
                  role_arn = arn:aws:iam::327349948073:role/AWSAudit_CrossAccount
                  source_profile = default
                  [profile sharedprod1]
                  role_arn = arn:aws:iam::006172073716:role/AWSAudit_CrossAccount
                  source_profile = default
                  [profile commerce-prod1]
                  role_arn = arn:aws:iam::158134245097:role/AWSAudit_CrossAccount
                  source_profile = default
                  [profile commerce-dev1]
                  role_arn = arn:aws:iam::342101340642:role/AWSAudit_CrossAccount
                  source_profile = default
                  [profile uptake-l1]
                  role_arn = arn:aws:iam::944898352560:role/AWSAudit_CrossAccount
                  source_profile = default
                  [profile eroute-dev]
                  role_arn = arn:aws:iam::413750806156:role/AWSAudit_CrossAccount
                  source_profile = default
                  [profile psld-dev]
                  role_arn = arn:aws:iam::452253933603:role/AWSAudit_CrossAccount
                  source_profile = default
                  [profile eroute-prod]
                  role_arn = arn:aws:iam::317478934138:role/AWSAudit_CrossAccount
                  source_profile = default
                  [profile echannel]
                  role_arn = arn:aws:iam::308591795231:role/AWSAudit_CrossAccount
                  source_profile = default
                  [profile exd-dev]
                  role_arn = arn:aws:iam::063913871427:role/AWSAudit_CrossAccount
                  source_profile = default
               mode: "000744"
               owner: ec2-user
               group: ec2-user
             "/etc/cron.d/scout2run":
                  content: !Sub |
                    PATH= /usr/local/bin:/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/sbin:/opt/aws/bin:/home/ec2-user/.local/bin:/home/ec2-user/bin
                    0 11 * * * ec2-user /home/ec2-user/run_scout2-${Environment}.sh
                    */15 * * * * ec2-user /home/ec2-user/run_s3-${Environment}.sh
                  mode: "000644"
                  owner: root
                  group: root
           commands:
             01_permison_to_run_awscli:
                command : !Sub |
                  chown -R ec2-user:ec2-user /home/ec2-user/.aws
                  chmod -R 744 /home/ec2-user/.aws/
                  crontab /etc/cron.d/scout2run
             02_copyfilesfroms3:
                command: !Sub |
                  export http_proxy="http://172.18.10.246:80"
                  export https_proxy="http://172.18.10.246:80"
                  export no_proxy="localhost, .cat.com, 169.254.169.254"
                  sudo yum install -y jq
                  aws s3 cp s3://ss-vsts-codepipeline-us-east-2/vsts/478226638351/deployment/scout2/scripts/CAT-Rules/cloudtrail-bucket-logging.json /usr/local/lib/python2.7/site-packages/AWSScout2/rules/data/findings/
                  aws s3 cp s3://ss-vsts-codepipeline-us-east-2/vsts/478226638351/deployment/scout2/scripts/CAT-Rules/cidr-is-all.json /usr/local/lib/python2.7/site-packages/AWSScout2/rules/data/conditions/
                  aws s3 cp s3://ss-vsts-codepipeline-us-east-2/vsts/478226638351/deployment/scout2/scripts/CAT-Rules/findings.zip /usr/local/lib/python2.7/site-packages/AWSScout2/rules/data/
                  aws s3 cp s3://ss-vsts-codepipeline-us-east-2/vsts/478226638351/deployment/scout2/scripts/CAT-Rules/cloudtrail-integrates-with-cloudwatch.json /usr/local/lib/python2.7/site-packages/AWSScout2/rules/data/findings/
                  aws s3 cp s3://ss-vsts-codepipeline-us-east-2/vsts/478226638351/deployment/scout2/scripts/CAT-Rules/cloudtrail-kms-encryption.json /usr/local/lib/python2.7/site-packages/AWSScout2/rules/data/findings/
                  aws s3 cp s3://ss-vsts-codepipeline-us-east-2/vsts/478226638351/deployment/scout2/scripts/CAT-CIS-Ruleset.json /usr/local/lib/python2.7/site-packages/AWSScout2/rules/data/rulesets/
                  aws s3 cp s3://ss-vsts-codepipeline-us-east-2/vsts/478226638351/deployment/scout2/scripts/CAT-CIS-Ruleset-s3.json /usr/local/lib/python2.7/site-packages/AWSScout2/rules/data/rulesets/
                  aws s3 cp s3://ss-vsts-codepipeline-us-east-2/vsts/478226638351/deployment/scout2/scripts/run_s3-${Environment}.sh /home/ec2-user/
                  aws s3 cp s3://ss-vsts-codepipeline-us-east-2/vsts/478226638351/deployment/scout2/scripts/run_scout2-${Environment}.sh /home/ec2-user/ 
                  chown -R ec2-user:ec2-user /home/ec2-user/
                  chmod -R 744 /home/ec2-user/run_s3-${Environment}.sh
                  chmod -R 744 /home/ec2-user/run_scout2-${Environment}.sh
             03_remove_default_findings:
                command: !Sub |
                  cd /usr/local/lib/python2.7/site-packages/AWSScout2/rules/data
                  rm -rf findings
                  unzip findings.zip 
                  mv findings1 findings
                  cd ~
        setup:
          commands:
            01_create_and _mount:
              command: !Sub |
                mkdir -p /${EFSMountPoint}
                mount -t nfs4 -o nfsvers=4.1 ${MountTargetIps}:/ /${EFSMountPoint}
                chown -R ec2-user:ec2-user /${EFSMountPoint}
                chmod -R 755 /${EFSMountPoint}
              ignoreErrors: "false"
    Properties:
      AssociatePublicIpAddress: false
      ImageId:
        Ref: AmiId
      InstanceType:
        Ref: InstanceType
      KeyName:
        Ref: KeyPair
      SecurityGroups:
        - !Ref DefaultSecurityGroup
        - !Ref MgmtSecurityGroup
      IamInstanceProfile: !Ref Scout2MgmtEc2Profile
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash -xe
          export http_proxy="http://172.18.10.246:80"
          export https_proxy="http://172.18.10.246:80"
          export no_proxy="localhost, .cat.com, 169.254.169.254"
          /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource LaunchConfig --configsets EFSMountConfig --region ${AWS::Region}
          sleep 5
          /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource LaunchConfig --configsets Scout2 --region ${AWS::Region}
          sleep 5
          /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource LaunchConfig --configsets cfn-hupconfig --region ${AWS::Region}
          /opt/aws/bin/cfn-signal -e $? --stack ${AWS::StackName} --resource AutoscalingGroup --region ${AWS::Region}
  AutoscalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    UpdatePolicy:
      AutoScalingReplacingUpdate:
        WillReplace: true
    Properties:
      VPCZoneIdentifier: !Ref PrivateSubnets
      LaunchConfigurationName: !Ref LaunchConfig
      MinSize: 1
      MaxSize: 1
      Tags:
      - Key: Name
        Value: !Sub "Scout2-mgmt-${Environment}"
        PropagateAtLaunch: 'true'
      - Key: techowner
        Value: vemula_chenna@cat.com
        PropagateAtLaunch: 'true'
      - Key: businessowner
        Value: rossi_brian@cat.com
        PropagateAtLaunch: 'true'
      - Key: managedby
        Value: security
        PropagateAtLaunch: 'true'
      - Key: environment
        Value: !Ref Environment
        PropagateAtLaunch: 'true'
      - Key: applicationname
        Value: Scout2
        PropagateAtLaunch: 'true'
      - Key: riskdomain
        Value: DL
        PropagateAtLaunch: 'true'
      - Key: dataclassification
        Value: Yellow
        PropagateAtLaunch: 'true'
Outputs:
  Scout2Role:
    Value: !Ref Scout2MgmtEc2Role
